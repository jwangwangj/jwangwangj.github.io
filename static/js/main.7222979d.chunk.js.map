{"version":3,"sources":["components/NavBar/index.js","components/Typewriter/index.js","pages/Landing/index.js","pages/Projects/index.js","pages/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","target","rel","Typewriter","props","code","PropTypes","bool","staticText","string","data","array","state","typedText","typing","index","animate","text","idx","typingInterval","setInterval","length","setState","substring","setTimeout","deleting","clearInterval","deletingInterval","console","log","this","unmount","Component","Landing","Projects","Resume","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7222979d.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './index.css'\n\nfunction NavBar() {\n  return (\n    <div className=\"NavBar\">\n      <a className=\"NavBar-logo\" href=\"/\">JANET <b>WANG</b></a>\n      <nav className=\"NavBar-nav\">\n      <a\n        className=\"NavBar-link\"\n        href=\"/resume\"\n      >\n        Resume\n      </a>\n      <a\n        className=\"NavBar-link\"\n        href=\"/projects\"\n      >\n        Projects\n      </a>\n      <a\n        className=\"NavBar-link\"\n        href=\"https://github.com/jwangwangj\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Github\n      </a>\n      <a\n        className=\"NavBar-link\"\n        // href=\"/contact\"\n      >\n        Contact\n      </a>\n    </nav>\n    </div>\n  );\n}\n\nexport default NavBar;","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './index.css';\nimport PropTypes from 'prop-types'\n\nclass Typewriter extends Component {\n  props = {\n    code: PropTypes.bool,\n    staticText: PropTypes.string,\n    data: PropTypes.array\n  }\n\n  state = {\n    typedText: \"\",\n    typing: true,\n    index: 0\n  }\n\n  componentDidMount() {\n    this.animate()\n  }\n\n  componentWillUnmount() {\n    this.setState({unmount: true})\n  }\n\n  animate = () => {\n    const { data } = this.props\n    const { index } = this.state\n    this.typing(data[index])\n  }\n\n  typing = (text) => {\n    // console.log(text, this.state.index)\n    let idx = 0\n    const typingInterval = setInterval(() => {\n      const {typing} = this.state\n      if (text && typing && idx <= text.length){\n      this.setState({typedText: text.substring(0, idx)})\n      idx++\n      } else {\n        setTimeout(() => {\n          this.setState({typing: false}, this.deleting(idx))\n        }, 2000)\n        clearInterval(typingInterval)\n      }\n    }, 32)\n  }\n\n  deleting = () => {\n    const {data} = this.props\n    const deletingInterval = setInterval(() => {\n      console.log(this.state.index)\n\n      const {index, typing, typedText} = this.state\n      const idx = typedText.length - 1\n      if (!typing && idx >= 0){\n        this.setState({typedText: typedText.substring(0, idx)})\n      } else {\n        setTimeout(() => {\n          this.setState(\n            {\n              typing: true, \n              index: index < data.length ? index + 1 : 0\n            }, () => this.typing(data[this.state.index])\n          )\n        }, 1000)\n        clearInterval(deletingInterval)\n      }\n    }, 32)\n  }\n\n  render () {\n    const {code, staticText} = this.props\n    const {typedText} = this.state\n\n    return code ? \n      (<code className=\"Typewriter\">{staticText} {typedText}<span className=\"blinking\">|</span></code>) : \n      (<span className=\"Typewriter\">{staticText} {typedText}<span className=\"blinking\">|</span></span>);\n  }\n}\n\nexport default Typewriter;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './index.css';\nimport NavBar from '../../components/NavBar'\nimport Typewriter from '../../components/Typewriter';\n\nfunction Landing() {\n  return (\n    <div className=\"Landing\">\n      <NavBar />\n      <div className=\"Landing-content\">\n        <header className=\"Landing-header\">\n          <p>\n            <code>Hi I'm Janet :)</code>\n          </p>\n          <Typewriter \n            code\n            staticText=\"I'm a:\" \n            data={[\n              \"software engineer\", \n              \"data scientist\", \n              \"cognitive science enthusiast\",\n              \"web developer\"\n            ]}\n          />\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './index.css';\nimport NavBar from '../../components/NavBar'\n\nfunction Projects() {\n  return (\n    <div className=\"Projects\">\n      <NavBar />\n      <header className=\"Projects-header\">\n        <p>\n          <code>Coming Soon</code>\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/jwangwangj\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          jwangwangj\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './index.css';\nimport NavBar from '../../components/NavBar'\n\nfunction Resume() {\n  return (\n    <div className=\"Resume\">\n      <NavBar />\n      <header className=\"Resume-header\">\n        <p>\n          <code>Coming Soon</code>\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/jwangwangj\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          jwangwangj\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Resume;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Landing from './pages/Landing'\nimport Projects from './pages/Projects';\nimport Resume from './pages/Resume';\n\nexport default function App() {\n  return (\n    <Router basename=\"/\">\n      {/* <Switch> */}\n        <Route exact path=\"/\">\n          <Landing />\n        </Route>\n        <Route exact path=\"/projects\">\n          <Projects />\n        </Route>\n        <Route exact path=\"/resume\">\n          <Resume />\n        </Route>\n      {/* </Switch> */}\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}